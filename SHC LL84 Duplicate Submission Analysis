#loading pandas and numpy
import pandas as pd
import numpy as np

#reading data into pandas
path = 'C:\\Users\\PC\\Downloads\\DOB LL84_133 Data Quality Error Log 2021 (DQE) - Sheet1.csv'

LL84Data = pd.read_csv(path,dtype='object')

#printing info on the data for a quick manual check
print (LL84Data.head())
print(LL84Data.info())

#dropping columns that aren't useful for our analysis to make it run faster
Submission_Data = LL84Data.drop(LL84Data.columns[27:52],axis=1)

#printing info on the data for a quick manual check
print (Submission_Data.head())
print(Submission_Data.info())
print (Submission_Data.nunique())

#separating individual properties and printing info on the data for a quick manual check
Individual_Props = Submission_Data[Submission_Data['Parent Property ID'] == "Not Applicable: Standalone Property"]
print(Individual_Props.head())
print(Individual_Props.info())
print (Individual_Props.nunique())

#separating campus/parent-child properties and printing info on the data for a quick manual check
Parent_Child_Props = Submission_Data[Submission_Data['Parent Property ID'] != "Not Applicable: Standalone Property"]
print (Parent_Child_Props.head())
print(Parent_Child_Props.nunique())
print(Parent_Child_Props.info())

#building out some code to clean columns. 
#right now it just removes any punctuation/symbols left over in the columns, but there are some BBLs that were entered very
#incorrectly (entering the borough by name and not number, for example). We'll have to figure out how to fix those BBL outliers
import string

punct = """ '!"#$%&\'()*+,-./:;<=>?@[\\]^_`{}~' """   # `|` is not present here
transtab = str.maketrans(dict.fromkeys(punct, ''))

column_cleanup = ['BBL','Cleaned BBL','GFA on CBL']

#Individual_Props['BBL'] = '|'.join(Individual_Props['BBL'].tolist()).translate(transtab).split('|')
#Individual_Props['Cleaned BBL'] = '|'.join(Individual_Props['Cleaned BBL'].tolist()).translate(transtab).split('|')
#Individual_Props['GFA on CBL'] = '|'.join(Individual_Props['GFA on CBL'].tolist()).translate(transtab).split('|')

for column in column_cleanup:
    Individual_Props[column] = '|'.join(Individual_Props[column].tolist()).translate(transtab).split('|')
    
#checking number of unique values in each Individual property column before filtering
print (Individual_Props.nunique())

submitter_counts = Individual_Props.groupby(['Cleaned BBL','Property ID','BIN'])['Submitter Email'].value_counts().sort_values(ascending = False)
submitter_counts[submitter_counts > 1]

emaildate_counts = Individual_Props.groupby(['Cleaned BBL','Property ID','BIN'])['Release Date'].value_counts().sort_values(ascending=False)
emaildate_counts[emaildate_counts>1]

#get a count of outlier BBLs and make a list of what they look like. maybe filter out rows with multiple BBLs?
#remove any rows where BBL/BIN are NotAvailable
